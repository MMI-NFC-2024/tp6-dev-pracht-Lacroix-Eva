---
import Layout from "../../../layouts/Layout.astro";
import cars from "../../../assets/cars.json";

export async function getStaticPaths() {
  // Extraire toutes les années uniques du fichier cars.json
  const years = Array.from(new Set(cars.map((car) => car.year)));
  return years.map((year) => ({
    params: { year: String(year) },
  }));
}

import PlotFigure from "../../../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";

const { year } = Astro.params;

// Filtrer les voitures pour l'année spécifiée (conversion en nombre)
const filteredCars = cars.filter((y) => String(y.year) === String(year));

// Configuration du graphique
const plotOptions = {
  grid: true,
  marks: [
    Plot.dot(filteredCars, {
      x: "weight (lb)",
      y: "power (hp)",
      fill: "steelblue",
      r: 4,
      fillOpacity: 0.7,
    }),
  ],
  x: {
    label: "Poids (lb)",
  },
  y: {
    label: "Puissance (hp)",
  },
  title: `Relation Puissance vs Poids - Voitures ${year}`,
};
---

<Layout>
  <div class="max-w-2xl mx-auto bg-white rounded-lg shadow-lg p-8 mt-8">
    <h1 class="text-3xl font-bold text-center text-purple-600 mb-6">
      Voitures – Rendu statique
    </h1>
    <h2 class="text-xl font-semibold text-gray-700 mb-2 text-center">
      Voitures de l'année <span class="text-purple-500">{year}</span>
    </h2>
    <p class="text-center text-gray-600 mb-6">
      {filteredCars.length} voiture(s) trouvée(s) pour l'année <span
        class="font-medium">{year}</span
      >
    </p>
    <div class="flex justify-center">
      <PlotFigure options={plotOptions} />
    </div>
  </div>
</Layout>
